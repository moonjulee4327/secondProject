<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="acm"><!-- 자바 패키지와 같은 역할 -->
	
<!-- 
	이 영역에서 sql문에 맞는 태그를 사용하여 SQL문을 작성한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때 mapper태그의 namespace속성과 연결하여 사용하는 이름
	2) parameterType속성 : SQL문에 사용할 데이터가 들어있는 객체타입을 지정한다.
							(보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	3) resultType속성 : select문을 실행한 결과를 담을 객체타입을 지정한다.
							(보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	4) resultMap속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한
						매핑을 위해 사용된다.
 -->	
<!-- insert 연습 -->
	<insert id="insert" parameterType="kr.or.ddit.app.acm.vo.AcommodationVO">
		 INSERT INTO acm 
		 (acm_id,acm_nm,acm_se,acm_addr,acm_pri,acm_qty,acm_rd,acm_wrt,atch_file_id)
		VALUES   (#{acmId}, #{acmNm}, #{acmSe}, #{Addr}, #{Price}, #{Qty}, sysdate, #{Writer}, #{AcmAtchFileId})
	</insert>
	
	<update id="update" parameterType="kr.or.ddit.app.acm.vo.AcommodationVO">
		UPDATE acm  
    		SET acm_nm = #{acmNm}
    		, acm_se = #{acmSe}
    		, acm_addr = #{Addr}
    		, acm_pri = #{Price}
    		, acm_qty = #{Qty}
    		, acm_rd = sysdate
    		, acm_wrt = #{Writer}
    		, atch_file_id = #{AcmAtchFileId}
		WHERE             
    		acm_id = #{acmId}    
	</update>
	
	<delete id="delete" parameterType="String">
		delete from acm
		where acm_id = #{acmId}	<!-- String 으로 넘어오면 변수가 뭐든 상관없음 -->
	</delete>
	
	<resultMap type="kr.or.ddit.app.acm.vo.AcommodationVO" id="acmMap">
		<result property="acmId" column="acm_id" />
		<result property="acmNm" column="acm_nm" />
		<result property="acmSe" column="acm_Se" />
		<result property="Addr" column="acm_addr" />
		<result property="Price" column="acm_pri" />
		<result property="Qty" column="acm_qty" />
		<result property="acmRd" column="acm_rd" />
		<result property="AcmAtchFileId" column="atch_file_id" />
	</resultMap>
	
	<select id="acmAllList" resultMap="acmMap">
		select *
		from acm
	</select>
	
	<select id="getAcm" parameterType="String" resultMap="acmMap">
		select *
		from acm
		where acm_id = #{acmId}
	</select>
	
	<select id="check" parameterType="String" resultType="String">
		select count(*) as cnt
		from acm
		where acm_id = #{acmId}
	</select>
	
	<select id="search" parameterType="acmVO" resultType="acmVO">
		select * from acm where 1 = 1
		<if test="acmId != null and acmId != ''">
	 		and acm_id = #{acmId}
		</if>
		<if test="acmNm != null and acmNm != ''">
		 	and acm_nm = #{acmNm}
		</if>
		<if test="acmSe != null and acmSe != ''">
		  	and acm_se = #{acmSe}
		</if>
		<if test="Addr != null and Addr != ''">
		  	and acm_addr like '%' || #{Addr} || '%'
		</if>
		<if test="Price != null and Price != ''">
		  	and acm_pri like '%' || #{Price} || '%'
		</if>
		<if test="Qty != null and Qty != ''">
		  	and acm_qty like '%' || #{Qty} || '%'
		</if>
		<if test="acmRd != null and acmRd != ''">
		  	and acm_rd like '%' || #{acmRd} || '%'
		</if>
		<if test="Writer != null and Writer != ''">
		  	and acm_wrt like '%' || #{Writer} || '%'
		</if>
	</select>
	
</mapper>